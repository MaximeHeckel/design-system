name: CI

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - '**.yml'
      - '**.json'

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

jobs:
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Cache pnpm dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Cache Cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            cypress-binary-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true' || steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: |
          pnpm install
  lint-format:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Restore pnpm dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run lint
        run: |
          pnpm lint
      - name: Run prettier
        run: |
          pnpm format
  type-check:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Restore pnpm dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Check types
        run: |
          pnpm type-check
  unit-test:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Restore pnpm dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run test
        run: |
          pnpm test
  build:
    runs-on: ubuntu-latest
    needs: [lint-format, type-check, unit-test]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Restore pnpm dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run build
        run: |
          pnpm build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: dist
          retention-days: 1
